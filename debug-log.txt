
> tapnob@0.0.0 build
> tsc -b && vite build --debug

2025-07-17T21:50:04.769Z vite:config config file loaded in 95.08ms
2025-07-17T21:50:04.774Z vite:env loading env files: [
  'C:/react-web/tapnob/.env',
  'C:/react-web/tapnob/.env.local',
  'C:/react-web/tapnob/.env.production',
  'C:/react-web/tapnob/.env.production.local'
]
2025-07-17T21:50:04.774Z vite:env env files loaded in 0.97ms
2025-07-17T21:50:04.776Z vite:env using resolved env: {}
2025-07-17T21:50:04.827Z vite:config using resolved config: {
  plugins: [
    'vite:build-metadata',
    'vite:watch-package-data',
    'alias',
    'vite:react-babel',
    'vite:react-refresh',
    'vite:modulepreload-polyfill',
    'vite:resolve',
    'vite:html-inline-proxy',
    'vite:css',
    'vite:esbuild',
    'vite:json',
    'vite:wasm-helper',
    'vite:worker',
    'vite:asset',
    'vite:wasm-fallback',
    'vite:define',
    'vite:css-post',
    'vite:build-html',
    'vite:worker-import-meta-url',
    'vite:asset-import-meta-url',
    'vite:force-systemjs-wrap-complete',
    'commonjs',
    'vite:data-uri',
    'vite:rollup-options-plugins',
    'vite:dynamic-import-vars',
    'vite:import-glob',
    'vite:build-import-analysis',
    'vite:esbuild-transpile',
    'vite:terser',
    'vite:manifest',
    'vite:ssr-manifest',
    'vite:reporter',
    'vite:load-fallback'
  ],
  build: {
    target: [ 'chrome107', 'edge107', 'firefox104', 'safari16' ],
    polyfillModulePreload: true,
    modulePreload: { polyfill: true },
    outDir: 'dist',
    assetsDir: 'assets',
    assetsInlineLimit: 4096,
    sourcemap: false,
    terserOptions: {},
    rollupOptions: { onwarn: [Function: onwarn] },
    commonjsOptions: { include: [ /node_modules/ ], extensions: [ '.js', '.cjs' ] },
    dynamicImportVarsOptions: { warnOnError: true, exclude: [ /node_modules/ ] },
    write: true,
    emptyOutDir: null,
    copyPublicDir: true,
    manifest: false,
    lib: false,
    ssrManifest: false,
    ssrEmitAssets: false,
    reportCompressedSize: true,
    chunkSizeWarningLimit: 500,
    watch: null,
    cssCodeSplit: true,
    minify: 'esbuild',
    ssr: false,
    emitAssets: true,
    createEnvironment: [Function: createEnvironment],
    cssTarget: [ 'chrome107', 'edge107', 'firefox104', 'safari16' ],
    cssMinify: true
  },
  esbuild: { jsxDev: false, jsx: 'automatic', jsxImportSource: undefined },
  optimizeDeps: {
    include: [
      'react',
      'react-dom',
      'react/jsx-dev-runtime',
      'react/jsx-runtime'
    ],
    exclude: [],
    needsInterop: [],
    extensions: [],
    disabled: undefined,
    holdUntilCrawlEnd: true,
    force: false,
    noDiscovery: false,
    esbuildOptions: { preserveSymlinks: false, jsx: 'automatic' }
  },
  resolve: {
    externalConditions: [ 'node' ],
    extensions: [
      '.mjs',  '.js',
      '.mts',  '.ts',
      '.jsx',  '.tsx',
      '.json'
    ],
    dedupe: [ 'react', 'react-dom' ],
    noExternal: [],
    external: [],
    preserveSymlinks: false,
    alias: [
      {
        find: /^\/?@vite\/env/,
        replacement: '/@fs/C:/react-web/tapnob/node_modules/vite/dist/client/env.mjs'
      },
      {
        find: /^\/?@vite\/client/,
        replacement: '/@fs/C:/react-web/tapnob/node_modules/vite/dist/client/client.mjs'
      }
    ],
    mainFields: [ 'browser', 'module', 'jsnext:main', 'jsnext' ],
    conditions: [ 'module', 'browser', 'development|production' ],
    builtins: []
  },
  environments: {
    client: {
      define: undefined,
      resolve: {
        externalConditions: [ 'node' ],
        extensions: [
          '.mjs',  '.js',
          '.mts',  '.ts',
          '.jsx',  '.tsx',
          '.json'
        ],
        dedupe: [ 'react', 'react-dom' ],
        noExternal: [],
        external: [],
        preserveSymlinks: false,
        alias: [
          {
            find: /^\/?@vite\/env/,
            replacement: '/@fs/C:/react-web/tapnob/node_modules/vite/dist/client/env.mjs'
          },
          {
            find: /^\/?@vite\/client/,
            replacement: '/@fs/C:/react-web/tapnob/node_modules/vite/dist/client/client.mjs'
          }
        ],
        mainFields: [ 'browser', 'module', 'jsnext:main', 'jsnext' ],
        conditions: [ 'module', 'browser', 'development|production' ],
        builtins: []
      },
      keepProcessEnv: false,
      consumer: 'client',
      optimizeDeps: {
        include: [
          'react',
          'react-dom',
          'react/jsx-dev-runtime',
          'react/jsx-runtime'
        ],
        exclude: [],
        needsInterop: [],
        extensions: [],
        disabled: undefined,
        holdUntilCrawlEnd: true,
        force: false,
        noDiscovery: false,
        esbuildOptions: { preserveSymlinks: false, jsx: 'automatic' }
      },
      dev: {
        warmup: [],
        sourcemap: { js: true },
        sourcemapIgnoreList: [Function: isInNodeModules],
        preTransformRequests: true,
        createEnvironment: [Function: defaultCreateClientDevEnvironment],
        recoverable: true,
        moduleRunnerTransform: false
      },
      build: {
        target: [ 'chrome107', 'edge107', 'firefox104', 'safari16' ],
        polyfillModulePreload: true,
        modulePreload: { polyfill: true },
        outDir: 'dist',
        assetsDir: 'assets',
        assetsInlineLimit: 4096,
        sourcemap: false,
        terserOptions: {},
        rollupOptions: { onwarn: [Function: onwarn] },
        commonjsOptions: { include: [ /node_modules/ ], extensions: [ '.js', '.cjs' ] },
        dynamicImportVarsOptions: { warnOnError: true, exclude: [ /node_modules/ ] },
        write: true,
        emptyOutDir: null,
        copyPublicDir: true,
        manifest: false,
        lib: false,
        ssrManifest: false,
        ssrEmitAssets: false,
        reportCompressedSize: true,
        chunkSizeWarningLimit: 500,
        watch: null,
        cssCodeSplit: true,
        minify: 'esbuild',
        ssr: false,
        emitAssets: true,
        createEnvironment: [Function: createEnvironment],
        cssTarget: [ 'chrome107', 'edge107', 'firefox104', 'safari16' ],
        cssMinify: true
      },
      plugins: [
        {
          name: 'vite:build-metadata',
          renderChunk: [AsyncFunction: renderChunk]
        },
        {
          name: 'vite:watch-package-data',
          buildStart: [Function: buildStart],
          buildEnd: [Function: buildEnd],
          watchChange: [Function: watchChange]
        },
        {
          name: 'alias',
          buildStart: [AsyncFunction: buildStart],
          resolveId: [Function: resolveId]
        },
        {
          name: 'vite:react-babel',
          enforce: 'pre',
          config: [Function: config],
          configResolved: [Function: configResolved],
          options: [Function: options]
        },
        {
          name: 'vite:react-refresh',
          enforce: 'pre',
          config: [Function: config],
          resolveId: {
            filter: { id: /^\/@react\-refresh$/ },
            handler: [Function: handler]
          },
          load: {
            filter: { id: /^\/@react\-refresh$/ },
            handler: [Function: handler]
          },
          transformIndexHtml: [Function: transformIndexHtml]
        },
        {
          name: 'vite:modulepreload-polyfill',
          resolveId: { handler: [Function: handler] },
          load: { handler: [Function: handler] }
        },
        {
          name: 'vite:resolve',
          resolveId: [AsyncFunction: resolveId],
          load: { handler: [Function: handler] }
        },
        {
          name: 'vite:html-inline-proxy',
          resolveId: { handler: [Function: handler] },
          load: { handler: [Function: handler] }
        },
        {
          name: 'vite:css',
          buildStart: [Function: buildStart],
          buildEnd: [Function: buildEnd],
          load: { handler: [AsyncFunction: handler] },
          transform: { handler: [AsyncFunction: handler] }
        },
        {
          name: 'vite:esbuild',
          configureServer: [Function: configureServer],
          transform: [AsyncFunction: transform]
        },
        {
          name: 'vite:json',
          transform: { handler: [Function: handler] }
        },
        {
          name: 'vite:wasm-helper',
          resolveId: { handler: [Function: handler] },
          load: { handler: [AsyncFunction: handler] }
        },
        {
          name: 'vite:worker',
          buildStart: [Function: buildStart],
          load: { handler: [AsyncFunction: handler] },
          shouldTransformCachedModule: [Function: shouldTransformCachedModule],
          transform: { handler: [AsyncFunction: handler] },
          renderChunk: [Function: renderChunk],
          generateBundle: [Function: generateBundle]
        },
        {
          name: 'vite:asset',
          perEnvironmentStartEndDuringDev: true,
          buildStart: [Function: buildStart],
          resolveId: { handler: [Function: handler] },
          load: { handler: [AsyncFunction: handler] },
          renderChunk: [Function: renderChunk],
          generateBundle: [Function: generateBundle]
        },
        {
          name: 'vite:wasm-fallback',
          load: { handler: [Function: handler] }
        },
        {
          name: 'vite:define',
          transform: { handler: [AsyncFunction: handler] }
        },
        {
          name: 'vite:css-post',
          renderStart: [Function: renderStart],
          transform: { handler: [AsyncFunction: handler] },
          renderChunk: [AsyncFunction: renderChunk],
          augmentChunkHash: [Function: augmentChunkHash],
          generateBundle: [AsyncFunction: generateBundle]
        },
        {
          name: 'vite:build-html',
          transform: { handler: [AsyncFunction: handler] },
          generateBundle: [AsyncFunction: generateBundle]
        },
        {
          name: 'vite:worker-import-meta-url',
          applyToEnvironment: [Function: applyToEnvironment],
          shouldTransformCachedModule: [Function: shouldTransformCachedModule],
          transform: { handler: [AsyncFunction: handler] }
        },
        {
          name: 'vite:asset-import-meta-url',
          applyToEnvironment: [Function: applyToEnvironment],
          transform: { handler: [AsyncFunction: handler] }
        },
        {
          name: 'vite:force-systemjs-wrap-complete',
          renderChunk: [Function: renderChunk]
        },
        {
          name: 'commonjs',
          version: '28.0.6',
          options: [Function: options],
          buildStart: [Function: buildStart],
          buildEnd: [Function: buildEnd],
          load: [AsyncFunction: load],
          shouldTransformCachedModule: [Function: shouldTransformCachedModule],
          transform: [Function: transform]
        },
        {
          name: 'vite:data-uri',
          buildStart: [Function: buildStart],
          resolveId: [Function: resolveId],
          load: [Function: load]
        },
        {
          name: 'vite:dynamic-import-vars',
          resolveId: { handler: [Function: handler] },
          load: { handler: [Function: handler] },
          transform: { handler: [AsyncFunction: handler] }
        },
        {
          name: 'vite:import-glob',
          buildStart: [Function: buildStart],
          transform: { handler: [AsyncFunction: handler] },
          hotUpdate: [Function: hotUpdate]
        },
        {
          name: 'vite:build-import-analysis',
          resolveId: { handler: [Function: handler] },
          load: { handler: [Function: handler] },
          transform: { handler: [AsyncFunction: handler] },
          renderChunk: [Function: renderChunk],
          generateBundle: [Function: generateBundle]
        },
        {
          name: 'vite:esbuild-transpile',
          applyToEnvironment: [Function: applyToEnvironment],
          renderChunk: [AsyncFunction: renderChunk]
        },
        {
          name: 'vite:terser',
          applyToEnvironment: [Function: applyToEnvironment],
          renderChunk: [AsyncFunction: renderChunk],
          closeBundle: [Function: closeBundle]
        },
        {
          name: 'vite:reporter',
          sharedDuringBuild: true,
          perEnvironmentStartEndDuringDev: true,
          transform: [Function: transform],
          buildStart: [Function: buildStart],
          buildEnd: [Function: buildEnd],
          renderStart: [Function: renderStart],
          renderChunk: [Function: renderChunk],
          generateBundle: [Function: generateBundle],
          writeBundle: [AsyncFunction: writeBundle]
        },
        {
          name: 'vite:load-fallback',
          load: { handler: [AsyncFunction: handler] }
        }
      ]
    }
  },
  configFile: 'C:/react-web/tapnob/vite.config.ts',
  configFileDependencies: [ 'C:/react-web/tapnob/vite.config.ts' ],
  inlineConfig: {
    root: undefined,
    base: undefined,
    mode: undefined,
    configFile: undefined,
    configLoader: undefined,
    logLevel: undefined,
    clearScreen: undefined,
    build: {}
  },
  root: 'C:/react-web/tapnob',
  base: '/',
  decodedBase: '/',
  rawBase: '/',
  publicDir: 'C:/react-web/tapnob/public',
  cacheDir: 'C:/react-web/tapnob/node_modules/.vite',
  command: 'build',
  mode: 'production',
  isWorker: false,
  mainConfig: null,
  bundleChain: [],
  isProduction: true,
  css: {
    transformer: 'postcss',
    preprocessorMaxWorkers: true,
    devSourcemap: false
  },
  json: { namedExports: true, stringify: 'auto' },
  server: {
    port: 5173,
    strictPort: false,
    host: undefined,
    allowedHosts: [],
    https: undefined,
    open: false,
    proxy: undefined,
    cors: {
      origin: /^https?:\/\/(?:(?:[^:]+\.)?localhost|127\.0\.0\.1|\[::1\])(?::\d+)?$/
    },
    headers: {},
    warmup: { clientFiles: [], ssrFiles: [] },
    middlewareMode: false,
    fs: {
      strict: true,
      deny: [ '.env', '.env.*', '*.{crt,pem}', '**/.git/**' ],
      allow: [ 'C:/react-web/tapnob' ]
    },
    preTransformRequests: true,
    perEnvironmentStartEndDuringDev: false,
    sourcemapIgnoreList: [Function: isInNodeModules]
  },
  builder: undefined,
  preview: {
    port: 4173,
    strictPort: false,
    host: undefined,
    allowedHosts: [],
    https: undefined,
    open: false,
    proxy: undefined,
    cors: {
      origin: /^https?:\/\/(?:(?:[^:]+\.)?localhost|127\.0\.0\.1|\[::1\])(?::\d+)?$/
    },
    headers: {}
  },
  envDir: 'C:/react-web/tapnob',
  env: { BASE_URL: '/', MODE: 'production', DEV: false, PROD: true },
  assetsInclude: [Function: assetsInclude],
  logger: {
    hasWarned: false,
    info: [Function: info],
    warn: [Function: warn],
    warnOnce: [Function: warnOnce],
    error: [Function: error],
    clearScreen: [Function: clearScreen],
    hasErrorLogged: [Function: hasErrorLogged]
  },
  packageCache: Map(1) {
    'fnpd_C:/react-web/tapnob' => {
      dir: 'C:/react-web/tapnob',
      data: {
        name: 'tapnob',
        private: true,
        version: '0.0.0',
        type: 'module',
        scripts: {
          dev: 'vite',
          build: 'tsc -b && vite build',
          lint: 'eslint .',
          preview: 'vite preview'
        },
        dependencies: {
          '@emotion/react': '^11.14.0',
          '@emotion/styled': '^11.14.1',
          '@fontsource/poppins': '^5.2.6',
          '@fortawesome/fontawesome-free': '^6.7.2',
          '@mui/material': '^7.2.0',
          '@mui/styled-engine-sc': '^7.2.0',
          aos: '^2.3.4',
          axios: '^1.10.0',
          i: '^0.3.7',
          'lottie-react-web': '^2.2.2',
          'mdb-react-ui-kit': '^9.0.0',
          moment: '^2.30.1',
          npm: '^11.4.2',
          react: '^19.1.0',
          'react-dom': '^19.1.0',
          'react-hot-toast': '^2.5.2',
          'react-icons': '^5.5.0',
          'react-modal-sheet': '^4.4.0',
          'react-router-dom': '^7.6.3',
          'react-spinners': '^0.17.0',
          'styled-components': '^6.1.19',
          'vite-plugin-pwa': '^1.0.1'
        },
        devDependencies: {
          '@eslint/js': '^9.30.1',
          '@types/aos': '^3.0.7',
          '@types/react': '^19.1.8',
          '@types/react-dom': '^19.1.6',
          '@types/react-router-dom': '^5.3.3',
          '@vitejs/plugin-react': '^4.6.0',
          eslint: '^9.30.1',
          'eslint-plugin-react-hooks': '^5.2.0',
          'eslint-plugin-react-refresh': '^0.4.20',
          globals: '^16.3.0',
          typescript: '~5.8.3',
          'typescript-eslint': '^8.35.1',
          vite: '^7.0.4'
        }
      },
      hasSideEffects: [Function: hasSideEffects],
      setResolvedCache: [Function: setResolvedCache],
      getResolvedCache: [Function: getResolvedCache]
    },
    set: [Function (anonymous)]
  },
  worker: { format: 'iife', plugins: '() => plugins', rollupOptions: {} },
  appType: 'spa',
  experimental: {
    importGlobRestoreExtension: false,
    renderBuiltUrl: undefined,
    hmrPartialAccept: false
  },
  future: undefined,
  ssr: {
    target: 'node',
    optimizeDeps: { esbuildOptions: { preserveSymlinks: false } },
    resolve: { conditions: undefined, externalConditions: undefined }
  },
  dev: {
    warmup: [],
    sourcemap: { js: true },
    sourcemapIgnoreList: [Function: isInNodeModules],
    preTransformRequests: false,
    createEnvironment: [Function: defaultCreateDevEnvironment],
    recoverable: false,
    moduleRunnerTransform: false
  },
  webSocketToken: '2EZct1Mm5a9K',
  getSortedPlugins: [Function: getSortedPlugins],
  getSortedPluginHooks: [Function: getSortedPluginHooks],
  createResolver: [Function: createResolver],
  fsDenyGlob: [Function: arrayMatcher],
  safeModulePaths: Set(0) {},
  [Symbol(vite:resolved-config)]: true
}
[36mvite v7.0.4 [32mbuilding for production...[36m[39m
transforming...
2025-07-17T21:50:05.459Z vite:resolve [32m8.62ms[39m [36m./assets/fonts/Poppins-Black.ttf[39m -> [2mC:/react-web/tapnob/src/assets/fonts/Poppins-Black.ttf[22m
2025-07-17T21:50:05.461Z vite:resolve [33m10.26ms[39m [36m../webfonts/fa-brands-400.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff2[22m
2025-07-17T21:50:05.461Z vite:resolve [33m10.41ms[39m [36m../webfonts/fa-regular-400.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff2[22m
2025-07-17T21:50:05.461Z vite:resolve [33m10.38ms[39m [36m../webfonts/fa-solid-900.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff2[22m
2025-07-17T21:50:05.462Z vite:resolve [33m10.50ms[39m [36m../webfonts/fa-brands-400.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff2[22m
2025-07-17T21:50:05.462Z vite:resolve [33m10.96ms[39m [36m../webfonts/fa-solid-900.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff2[22m
2025-07-17T21:50:05.462Z vite:resolve [33m11.02ms[39m [36m../webfonts/fa-regular-400.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff2[22m
2025-07-17T21:50:05.462Z vite:resolve [33m11.05ms[39m [36m../webfonts/fa-solid-900.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.woff2[22m
2025-07-17T21:50:05.462Z vite:resolve [33m11.07ms[39m [36m../webfonts/fa-brands-400.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.woff2[22m
2025-07-17T21:50:05.462Z vite:resolve [33m11.08ms[39m [36m../webfonts/fa-regular-400.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.woff2[22m
2025-07-17T21:50:05.462Z vite:resolve [33m11.11ms[39m [36m../webfonts/fa-v4compatibility.woff2[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-v4compatibility.woff2[22m
2025-07-17T21:50:05.629Z vite:resolve [32m0.75ms[39m [36m../webfonts/fa-regular-400.ttf[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-regular-400.ttf[22m
2025-07-17T21:50:05.630Z vite:resolve [32m0.57ms[39m [36m../webfonts/fa-solid-900.ttf[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-solid-900.ttf[22m
2025-07-17T21:50:05.632Z vite:resolve [32m0.59ms[39m [36m../webfonts/fa-brands-400.ttf[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-brands-400.ttf[22m
2025-07-17T21:50:05.633Z vite:resolve [32m0.57ms[39m [36m../webfonts/fa-v4compatibility.ttf[39m -> [2mC:/react-web/tapnob/node_modules/@fortawesome/fontawesome-free/webfonts/fa-v4compatibility.ttf[22m
[32m✓[39m 1936 modules transformed.
[31m✗[39m Build failed in 8.36s
[31merror during build:
[31mCannot add property 0, object is not extensible[31m
    at Array.push (<anonymous>)
    at ConditionalExpression.getLiteralValueAtPath (file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:12270:45)
    at file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:5064:30
    at EntityPathTracker.withTrackedEntityAtPath (file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:2014:24)
    at LocalVariable.getLiteralValueAtPath (file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:5062:33)
    at Identifier.getLiteralValueAtPath (file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:5207:48)
    at BinaryExpression.getLiteralValueAtPath (file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:11785:37)
    at IfStatement.getTestValue (file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:12806:77)
    at IfStatement.hasEffects (file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:12722:32)
    at IfStatement.shouldBeIncluded (file:///C:/react-web/tapnob/node_modules/rollup/dist/es/shared/node-entry.js:2928:62)[39m
